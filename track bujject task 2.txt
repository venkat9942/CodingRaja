import pickle
from datetime import datetime

class Transaction:
    def __init__(self, amount, category, is_income, date=None):
        self.amount = amount
        self.category = category
        self.is_income = is_income
        self.date = date if date else datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    def __repr__(self):
        type_ = "Income" if self.is_income else "Expense"
        return f"{self.date} - {type_}: {self.category} - ${self.amount:.2f}"

class BudgetTracker:
    def __init__(self, filename):
        self.filename = filename
        self.transactions = self.load_transactions()

    def load_transactions(self):
        try:
            with open(self.filename, 'rb') as f:
                transactions = pickle.load(f)
        except FileNotFoundError:
            transactions = []
        return transactions

    def save_transactions(self):
        with open(self.filename, 'wb') as f:
            pickle.dump(self.transactions, f)

    def add_transaction(self, transaction):
        self.transactions.append(transaction)
        self.save_transactions()

    def calculate_budget(self):
        income = sum(t.amount for t in self.transactions if t.is_income)
        expenses = sum(t.amount for t in self.transactions if not t.is_income)
        return income - expenses

    def analyze_expenses(self):
        expense_categories = {}
        for t in self.transactions:
            if not t.is_income:
                if t.category in expense_categories:
                    expense_categories[t.category] += t.amount
                else:
                    expense_categories[t.category] = t.amount
        return expense_categories

    def list_transactions(self):
        if not self.transactions:
            print("No transactions recorded.")
        for transaction in self.transactions:
            print(transaction)

def main():
    filename = "transactions.pkl"
    budget_tracker = BudgetTracker(filename)

    while True:
        print("\n===== Budget Tracker =====")
        print("1. Add Income")
        print("2. Add Expense")
        print("3. View Transactions")
        print("4. Calculate Budget")
        print("5. Analyze Expenses")
        print("6. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            amount = float(input("Enter income amount: "))
            category = input("Enter income category: ")
            transaction = Transaction(amount, category, is_income=True)
            budget_tracker.add_transaction(transaction)
            print("Income added successfully.")

        elif choice == '2':
            amount = float(input("Enter expense amount: "))
            category = input("Enter expense category: ")
            transaction = Transaction(amount, category, is_income=False)
            budget_tracker.add_transaction(transaction)
            print("Expense added successfully.")

        elif choice == '3':
            budget_tracker.list_transactions()

        elif choice == '4':
            remaining_budget = budget_tracker.calculate_budget()
            print(f"Remaining budget: ${remaining_budget:.2f}")

        elif choice == '5':
            expenses = budget_tracker.analyze_expenses()
            if not expenses:
                print("No expenses recorded.")
            else:
                print("Expense Analysis:")
                for category, total in expenses.items():
                    print(f"{category}: ${total:.2f}")

        elif choice == '6':
            print("Exiting program...")
            break

        else:
            print("Invalid choice. Please enter a number from 1 to 6.")

if __name__ == "__main__":
    main()
